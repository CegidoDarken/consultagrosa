<!DOCTYPE html>
<html lang="en">
<style>
  .loader {
    position: fixed;
    left: 0px;
    top: 0px;
    width: 100%;
    height: 100%;
    z-index: 9999;
    background: url('img/graph.gif') 50% 50% no-repeat rgb(249, 249, 249);
    background-size: 400px;
  }

  @media (max-width: 768px) {
    .loader {
      background-size: contain;
    }
  }
</style>

<head>
  <title>dashboard</title>
</head>

<body>
  <div class="loader"></div>
  <%- include("partials/_headerpanel") %>
    <%- include("partials/_sidebarpanel") %>
      <main id="main" class="main">
        <div class="pagetitle">
          <h1>Dashboard</h1>
          <nav>
            <ol class="breadcrumb">
              <li class="breadcrumb-item"><a href="index.html">Reportes</a></li>
              <li class="breadcrumb-item active">Dashboard</li>
            </ol>
          </nav>
        </div>

        <section class="section dashboard">
          <div class="row">
            <div class="col-lg-12">
              <div class="row">
                <a class="col-xxl-4 col-md-6" href="/proveedores">
                  <div class="card info-card sales-card">
                    <div class="card-body">
                      <h5 class="card-title">Proveedores <span></span></h5>
                      <div class="d-flex align-items-center">
                        <div class="card-icon rounded-circle d-flex align-items-center justify-content-center">
                          <i class="bi bi-people"></i>
                        </div>
                        <div class="ps-3">
                          <h6>
                            <%= num_proveedores %>
                          </h6>
                          <span class="text-success small pt-1 fw-bold"></span>
                        </div>
                      </div>
                    </div>
                  </div>
                </a>

                <a class="col-xxl-4 col-md-6" href="/productos">
                  <div class="card info-card revenue-card">
                    <div class="card-body">
                      <h5 class="card-title">Productos <span></span></h5>
                      <div class="d-flex align-items-center">
                        <div class="card-icon rounded-circle d-flex align-items-center justify-content-center">
                          <i class="bi bi-boxes"></i>
                        </div>
                        <div class="ps-3">
                          <h6>
                            <%= num_productos %>
                          </h6>
                          <span class="text-success small pt-1 fw-bold"></span>

                        </div>
                      </div>
                    </div>
                  </div>
                </a>

                <a class="col-xxl-4 col-xl-12" href="/usuarios">
                  <div class="card info-card customers-card">
                    <div class="card-body">
                      <h5 class="card-title">Usuarios <span></span></h5>
                      <div class="d-flex align-items-center">
                        <div class="card-icon rounded-circle d-flex align-items-center justify-content-center">
                          <i class="bi bi-people"></i>
                        </div>
                        <div class="ps-3">
                          <h6>
                            <%= num_clientes %>
                          </h6>
                          <span class="text-danger small pt-1 fw-bold text-light"></span>
                        </div>
                      </div>
                    </div>
                  </div>
                </a>

                <div class="col-6">
                  <div class="card">
                    <div class="form-floating">
                      <select class="form-select" name="" id="year">
                      </select>
                      <label for="floatingSelect">Año</label>
                    </div>
                  </div>
                </div>
                <div class="col-6">
                  <div class="card">
                    <div class="form-floating">
                      <select class="form-select" name="" id="mesSelect">
                      </select>
                      <label for="floatingSelect">Mes</label>
                    </div>
                  </div>
                </div>
                <div class="col-12">
                  <div class="card">
                    <div class="card-body">
                      <h5 class="card-title">Historial pedidos <span class="anio"></span></h5>
                      <div id="reportsChart2"></div>
                    </div>
                  </div>
                </div>
                <div class="col-12">
                  <div class="card">
                    <div class="card-body">
                      <h5 class="card-title">Ganancias pedidos <span class="anio"></span></h5>
                      <div id="reportsChart3"></div>
                    </div>
                  </div>
                </div>
                <div class="col-12">
                  <div class="card">
                    <div class="card-body">
                      <h5 class="card-title">Ganancias productos <span class="anio"></span></h5>
                      <div id="reportsChart4"></div>
                    </div>
                  </div>
                </div>
                <div class="col-12">
                  <div class="card top-selling overflow-auto">

                    <div class="card-body pb-0">
                      <h5 class="card-title">Productos más pedidos <span class="anio"></span></h5>
                      <table class="table table-borderless w-100" id="mas_pedidos">
                        <thead>
                          <tr>
                            <th scope="col">Imagen</th>
                            <th scope="col">Nombre</th>
                            <th scope="col">Precio</th>
                            <th scope="col">Vendidos</th>
                            <th scope="col">Ganancias</th>
                          </tr>
                        </thead>
                        <tbody id="tbody2">
                        </tbody>
                      </table>
                    </div>
                  </div>
                </div>

                <div class="col-12">
                  <div class="card">
                    <div class="card-body">
                      <h5 class="card-title">Registro de actividades <span class="anio"></span></h5>
                      <div id="reportsChart"></div>
                    </div>

                  </div>
                </div>
              </div>
            </div>
          </div>
        </section>
      </main>
      <%- include("partials/_fotterpanel") %>
</body>
<script>
  (async () => {
    const selectElement = document.getElementById('mesSelect');

    const meses = [
      'Enero', 'Febrero', 'Marzo', 'Abril', 'Mayo', 'Junio',
      'Julio', 'Agosto', 'Septiembre', 'Octubre', 'Noviembre', 'Diciembre'
    ];

    const allMonthsOption = document.createElement('option');
    allMonthsOption.value = 'all';
    allMonthsOption.textContent = 'Todos los meses';
    selectElement.appendChild(allMonthsOption);

    meses.forEach((mes, index) => {
      const option = document.createElement('option');
      option.value = index + 1;
      option.textContent = mes;
      selectElement.appendChild(option);
    })
  })();
  (async () => {
    let year_satart = 2017;
    let year_end = (new Date).getFullYear(); // current year
    let year_selected = (new Date).getFullYear();
    $(".anio").each(function () {
      $(this).text("| " + year_selected);
    });
    let option;
    for (let i = year_satart; i <= year_end; i++) {
      if (i != 2022) {
        let selected = (i === year_selected ? ' selected' : '');
        option += await '<option value="' + i + '"' + selected + '>' + i + '</option>';
      }

    }
    document.getElementById("year").innerHTML = option;
  })();
  async function actividades_registros_anual(anio) {
    await fetch("/actividades_registros_anual", {
      method: 'POST',
      body: JSON.stringify({ anio: anio ?? (new Date).getFullYear() }),
      headers: {
        'Content-Type': 'application/json'
      }
    }).then(response => response.json()).then(data => {
      const meses = ['Enero', 'Febrero', 'Marzo', 'Abril', 'Mayo', 'Junio', 'Julio', 'Agosto', 'Septiembre', 'Octubre', 'Noviembre', 'Diciembre'];

      const chart = new ApexCharts(document.querySelector("#reportsChart"), {
        series: [{
          name: 'Proveedores',
          data: data.proveedores
        }, {
          name: 'Productos',
          data: data.productos
        }, {
          name: 'Usuarios',
          data: data.usuarios
        }],
        chart: {
          height: 350,
          type: 'area',
          toolbar: {
            show: true
          },
        },
        markers: {
          size: 4
        },
        colors: ['#5d5aab', '#2eca6a', '#ff771d'],
        fill: {
          type: "gradient",
          gradient: {
            shadeIntensity: 1,
            opacityFrom: 0.3,
            opacityTo: 0.4,
            stops: [0, 90, 100]
          }
        },
        dataLabels: {
          enabled: true
        },
        xaxis: {
          categories: meses,
        },
        tooltip: {
          x: {
            format: 'dd/MM/yy HH:mm'
          },
        }
      });
      chart.render();
      chart.update();
    }).catch(error => {
      console.error(error);
    });
  }
  async function actividades_registros_mes(anio, mes) {
    await fetch("/actividades_registros_mes", {
      method: 'POST',
      body: JSON.stringify({ anio: anio ?? (new Date).getFullYear(), mes: mes }),
      headers: {
        'Content-Type': 'application/json'
      }
    }).then(response => response.json()).then(data => {
      const meses = [
        'Día 1', 'Día 2', 'Día 3', 'Día 4', 'Día 5', 'Día 6', 'Día 7', 'Día 8', 'Día 9', 'Día 10',
        'Día 11', 'Día 12', 'Día 13', 'Día 14', 'Día 15', 'Día 16', 'Día 17', 'Día 18', 'Día 19', 'Día 20', 'Día 21', 'Día 22', 'Día 23', 'Día 24', 'Día 25', 'Día 26', 'Día 27', 'Día 28', 'Día 29', 'Día 30', 'Día 31'
      ];

      const chart = new ApexCharts(document.querySelector("#reportsChart"), {
        series: [{
          name: 'Proveedores',
          data: data.proveedores
        }, {
          name: 'Productos',
          data: data.productos
        }, {
          name: 'Usuarios',
          data: data.usuarios
        }],
        chart: {
          height: 350,
          type: 'area',
          toolbar: {
            show: true
          },
        },
        markers: {
          size: 4
        },
        colors: ['#5d5aab', '#2eca6a', '#ff771d'],
        fill: {
          type: "gradient",
          gradient: {
            shadeIntensity: 1,
            opacityFrom: 0.3,
            opacityTo: 0.4,
            stops: [0, 90, 100]
          }
        },
        dataLabels: {
          enabled: true
        },
        xaxis: {
          categories: meses,
        },
        tooltip: {
          x: {
            format: 'dd/MM/yy HH:mm'
          },
        }
      });
      chart.render();
      chart.update();
    }).catch(error => {
      console.error(error);
    });
  }
  async function actividades_pedidos_anual(anio) {
    await fetch("/actividades_pedidos_anual", {
      method: 'POST',
      body: JSON.stringify({ anio: anio ?? (new Date).getFullYear() }),
      headers: {
        'Content-Type': 'application/json'
      }
    }).then(response => response.json()).then(data => {
      const meses = ['Enero', 'Febrero', 'Marzo', 'Abril', 'Mayo', 'Junio', 'Julio', 'Agosto', 'Septiembre', 'Octubre', 'Noviembre', 'Diciembre'];
      const chart = new ApexCharts(document.querySelector("#reportsChart2"), {
        series: [{
          name: 'Pedidos',
          data: data.pedidos
        }],
        chart: {
          height: 350,
          type: 'area',
          toolbar: {
            show: true
          },
        },
        markers: {
          size: 4
        },
        colors: ['#4154f1', '#2eca6a', '#ff771d'],
        fill: {
          type: "gradient",
          gradient: {
            shadeIntensity: 1,
            opacityFrom: 0.3,
            opacityTo: 0.4,
            stops: [0, 90, 100]
          }
        },
        dataLabels: {
          enabled: true,
          formatter: function (value) {
            return value;
          }
        },
        stroke: {
          curve: 'smooth',
          width: 2
        },
        xaxis: {
          categories: meses,
        },
        tooltip: {
          x: {
            format: 'dd/MM/yy HH:mm'
          },
        }
      });
      chart.render();
      chart.update();
    }).catch(error => {
      console.error(error);
    });
  }
  async function actividades_pedidos_mes(anio, mes) {
    await fetch("/actividades_pedidos_mes", {
      method: 'POST',
      body: JSON.stringify({ anio: anio ?? (new Date).getFullYear(), mes: mes }),
      headers: {
        'Content-Type': 'application/json'
      }
    }).then(response => response.json()).then(data => {
      console.log(data)
      const meses = [
        'Día 1', 'Día 2', 'Día 3', 'Día 4', 'Día 5', 'Día 6', 'Día 7', 'Día 8', 'Día 9', 'Día 10',
        'Día 11', 'Día 12', 'Día 13', 'Día 14', 'Día 15', 'Día 16', 'Día 17', 'Día 18', 'Día 19', 'Día 20', 'Día 21', 'Día 22', 'Día 23', 'Día 24', 'Día 25', 'Día 26', 'Día 27', 'Día 28', 'Día 29', 'Día 30', 'Día 31'
      ];
      const chart = new ApexCharts(document.querySelector("#reportsChart2"), {
        series: [{
          name: 'Pedidos',
          data: data.pedidos
        }],
        chart: {
          height: 350,
          type: 'area',
          toolbar: {
            show: true
          },
        },
        markers: {
          size: 4
        },
        colors: ['#4154f1', '#2eca6a', '#ff771d'],
        fill: {
          type: "gradient",
          gradient: {
            shadeIntensity: 1,
            opacityFrom: 0.3,
            opacityTo: 0.4,
            stops: [0, 90, 100]
          }
        },
        dataLabels: {
          enabled: true,
          formatter: function (value) {
            return value;
          }
        },
        stroke: {
          curve: 'smooth',
          width: 2
        },
        xaxis: {
          categories: meses,
        },
        tooltip: {
          x: {
            format: 'dd/MM/yy HH:mm'
          },
        }
      });
      chart.render();
      chart.update();
    }).catch(error => {
      console.error(error);
    });
  }
  async function ganancias_pedidos_anual(anio) {
    await fetch("/ganancias_pedidos_anual", {
      method: 'POST',
      body: JSON.stringify({ anio: anio ?? (new Date).getFullYear() }),
      headers: {
        'Content-Type': 'application/json'
      }
    }).then(response => response.json()).then(data => {
      const meses = ['Enero', 'Febrero', 'Marzo', 'Abril', 'Mayo', 'Junio', 'Julio', 'Agosto', 'Septiembre', 'Octubre', 'Noviembre', 'Diciembre'];
      var ganancias = data.ganancias.map(valor => Math.round(valor * 100) / 100);
      const chart = new ApexCharts(document.querySelector("#reportsChart3"), {
        series: [{
          name: 'Ganancia Total',
          data: ganancias
        }],
        chart: {
          height: 350,
          type: 'bar',
          toolbar: {
            show: true
          },
        },
        markers: {
          size: 4
        },
        dataLabels: {
          enabled: true,
          formatter: function (value) {
            return "$" + value;
          }
        },
        xaxis: {
          categories: meses,
        },
        colors: ['#2eca6a'],
        yaxis: {
          labels: {
            formatter: function (value) {
              return "$" + Math.round(value * 100) / 100;
            }
          },
          min: 0,
          max: Math.max(...data.ganancias)
        },
        tooltip: {
          x: {
            format: 'dd/MM/yy HH:mm'
          },
        }
      });
      chart.render();
      chart.update();
    }).catch(error => {
      console.error(error);
    });
  }
  async function ganancias_pedidos_mes(anio, mes) {
    await fetch("/ganancias_pedidos_mes", {
      method: 'POST',
      body: JSON.stringify({ anio: anio ?? (new Date).getFullYear(), mes: mes }),
      headers: {
        'Content-Type': 'application/json'
      }
    }).then(response => response.json()).then(data => {
      console.log(data.ganancias.length);
      if (data.ganancias && data.ganancias.length > 0) {
        const meses = [
          'Día 1', 'Día 2', 'Día 3', 'Día 4', 'Día 5', 'Día 6', 'Día 7', 'Día 8', 'Día 9', 'Día 10',
          'Día 11', 'Día 12', 'Día 13', 'Día 14', 'Día 15', 'Día 16', 'Día 17', 'Día 18', 'Día 19', 'Día 20', 'Día 21', 'Día 22', 'Día 23', 'Día 24', 'Día 25', 'Día 26', 'Día 27', 'Día 28', 'Día 29', 'Día 30', 'Día 31'
        ];
        var ganancias = data.ganancias.map(valor => Math.round(valor * 100) / 100);
        const chart = new ApexCharts(document.querySelector("#reportsChart3"), {
          series: [{
            name: 'Ganancia Total',
            data: ganancias
          }],
          chart: {
            height: 350,
            type: 'bar',
            toolbar: {
              show: true
            },
          },
          markers: {
            size: 4
          },
          dataLabels: {
            enabled: true,
            formatter: function (value) {
              return "$" + value;
            }
          },
          xaxis: {
            categories: meses,
          },
          colors: ['#2eca6a'],
          yaxis: {
            labels: {
              formatter: function (value) {
                return "$" + Math.round(value * 100) / 100;
              }
            },
            min: 0,
            max: Math.max(...data.ganancias)
          },
          tooltip: {
            x: {
              format: 'dd/MM/yy HH:mm'
            },
          }
        });
        chart.render();
        chart.update();
      } else {
        alert("reportsChart3");
        const chartContainer = document.querySelector("#reportsChart3");
        chartContainer.innerHTML = "No hay datos disponibles para mostrar.";
      }
    }).catch(error => {
      console.error(error);
    });
  }
  async function ganancias_productos_anual(anio) {
    await fetch("/ganancias_productos_anual", {
      method: 'POST',
      body: JSON.stringify({ anio: anio ?? (new Date).getFullYear() }),
      headers: {
        'Content-Type': 'application/json'
      }
    }).then(response => response.json()).then(async data => {
      if (data.ganancias && data.ganancias.length > 0) {
        const chart = new ApexCharts(document.querySelector("#reportsChart4"), {
          series: [{
            name: 'Ganancia Total',
            data: data.ganancias ? data.ganancias.map(item => item.ganancias) : null
          }],
          chart: {
            type: 'area',
            height: 500,
            toolbar: {
              show: true
            },
          },
          stroke: {
            width: 3
          },
          dataLabels: {
            enabled: true,
            formatter: function (value) {
              return "$" + value;
            }
          },
          fill: {
            type: "gradient",
            gradient: {
              shadeIntensity: 1,
              opacityFrom: 0.3,
              opacityTo: 0.4,
              stops: [0, 90, 100]
            }
          },
          markers: {
            size: 0
          },
          xaxis: {
            categories: data.ganancias ? data.ganancias.map(item => item.producto) : null
          },
        });
        chart.render();
        chart.update();
      } else {
        alert();
      }
    }).catch(error => {
      console.error(error);
    });
  }
  async function ganancias_productos_mes(anio, mes) {
    await fetch("/ganancias_productos_mes", {
      method: 'POST',
      body: JSON.stringify({ anio: anio ?? (new Date).getFullYear(), mes: mes }),
      headers: {
        'Content-Type': 'application/json'
      }
    }).then(response => response.json()).then(async data => {
      if (data.ganancias && data.ganancias.length > 0) {
        const chart = new ApexCharts(document.querySelector("#reportsChart4"), {
          series: [{
            name: 'Ganancia Total',
            data: data.ganancias ? data.ganancias.map(item => item.ganancias) : null
          }],
          chart: {
            type: 'area',
            height: 500,
            toolbar: {
              show: true
            },
          },
          stroke: {
            width: 3
          },
          dataLabels: {
            enabled: true,
            formatter: function (value) {
              return "$" + value;
            }
          },
          fill: {
            type: "gradient",
            gradient: {
              shadeIntensity: 1,
              opacityFrom: 0.3,
              opacityTo: 0.4,
              stops: [0, 90, 100]
            }
          },
          markers: {
            size: 0
          },
          xaxis: {
            categories: data.ganancias ? data.ganancias.map(item => item.producto) : null
          },
        });
        chart.render();
        chart.update();
      } else {
        const chartContainer = document.querySelector("#reportsChart4");
        chartContainer.innerHTML = "No hay datos disponibles para mostrar.";
      }
    }).catch(error => {
      console.error(error);
    });
  }
  actividades_registros_anual();
  actividades_pedidos_anual();
  ganancias_pedidos_anual();
  ganancias_productos_anual();
  $(".loader").fadeOut("slow");
  var selectedAnio = $("#anioSelect").val();
  var pedidos = $('#mas_pedidos').DataTable({
    ajax: {
      url: "/mas_pedidos_anual",
      type: "POST",
      data: {
        anio: (new Date).getFullYear(),
      }
    },
    searching: false,
    bLengthChange: false,
    info: false,
    paging: false,
    columns: [
      { data: "img" },
      { data: "nombre", defaultContent: "-" },
      { data: "precio", defaultContent: "-" },
      { data: "vendidos", defaultContent: "-" },
      { data: "ganancias", defaultContent: "-" },
    ],
    columnDefs: [
      {
        targets: "_all",
        className: "text-center",
      },
      {
        targets: 0,
        render: function (data, type, row, meta) {
          return `<img src="${row.img}" style=" width: 100%;height: 80px;object-fit: contain;object-position: center;">`;
        }
      },
      {
        targets: 2,
        render: function (data, type, row, meta) {
          return "$ " + row.precio;
        }
      },
      {
        targets: 4,
        render: function (data, type, row, meta) {
          return "$ " + row.ganancias;
        }
      }
    ],
    "language": {
      "sEmptyTable": "No hay datos disponibles en la tabla",
      "sInfo": "Mostrando _START_ a _END_ de _TOTAL_ entradas",
      "sInfoEmpty": "Mostrando 0 a 0 de 0 entradas",
      "sInfoFiltered": "(Filtrado de _MAX_ entradas totales)",
      "sInfoPostFix": "",
      "sInfoThousands": ",",
      "sLengthMenu": "Mostrar _MENU_ entradas",
      "sLoadingRecords": "Cargando...",
      "sProcessing": "Procesando...",
      "sSearch": "Buscar:",
      "sZeroRecords": "No se encontraron resultados",
      "oPaginate": {
        "sFirst": "Primero",
        "sLast": "Último",
        "sNext": "Siguiente",
        "sPrevious": "Anterior"
      },
      "oAria": {
        "sSortAscending": ": Activar para ordenar la columna de manera ascendente",
        "sSortDescending": ": Activar para ordenar la columna de manera descendente"
      },
      "buttons": {
        "copy": "Copiar",
        "colvis": "Visibilidad"
      }
    }
  });

  var yearSelect = document.getElementById('year');
  yearSelect.addEventListener('change', async function () {
    var mes = mesSelect.value;
    var anio = yearSelect.value;
    var mesSeleccionado = mesSelect.options[mesSelect.selectedIndex].text;
    if (mes == "all") {
      $(".loader").fadeIn("slow");
      await actividades_registros_anual(anio);
      await actividades_pedidos_anual(anio);
      await ganancias_pedidos_anual(anio);
      await ganancias_productos_anual(anio);
      pedidos.settings()[0].ajax.data.anio = anio;
      pedidos.ajax.url("/mas_pedidos_anual").load();
      $(".anio").each(function () {
        $(this).text("| " + anio);
      });
      $(".loader").fadeOut("slow");
    } else {
      $(".loader").fadeIn("slow");
      await actividades_registros_mes(anio, mes);
      await actividades_pedidos_mes(anio, mes);
      await ganancias_pedidos_mes(anio, mes);
      await ganancias_productos_mes(anio, mes);
      pedidos.settings()[0].ajax.data.anio = anio;
      pedidos.settings()[0].ajax.data.mes = mes;
      pedidos.ajax.url("/mas_pedidos_mes").load();
      $(".anio").each(function () {
        $(this).text("| " + mesSeleccionado + "-" + yearSelect.value);
      });
      $(".loader").fadeOut("slow");
    }

  });

  var mesSelect = document.getElementById('mesSelect');
  mesSelect.addEventListener('change', async function () {
    var mes = mesSelect.value;
    var anio = yearSelect.value;
    var mesSeleccionado = mesSelect.options[mesSelect.selectedIndex].text;
    if (mes == "all") {
      $(".loader").fadeIn("slow");
      await actividades_registros_anual(anio);
      await actividades_pedidos_anual(anio);
      await ganancias_pedidos_anual(anio);
      await ganancias_productos_anual(anio);
      pedidos.settings()[0].ajax.data.anio = anio;
      pedidos.ajax.url("/mas_pedidos_anual").load();
      $(".anio").each(function () {
        $(this).text("| " + anio);
      });
      $(".loader").fadeOut("slow");
    } else {
      $(".loader").fadeIn("slow");
      pedidos.settings()[0].ajax.data.anio = anio;
      pedidos.settings()[0].ajax.data.mes = mes;
      pedidos.ajax.url("/mas_pedidos_mes").load();
      await actividades_registros_mes(anio, mes);
      await actividades_pedidos_mes(anio, mes);
      await ganancias_pedidos_mes(anio, mes);
      await ganancias_productos_mes(anio, mes);
      $(".anio").each(function () {
        $(this).text("| " + mesSeleccionado + "-" + yearSelect.value);
      });
      $(".loader").fadeOut("slow");
    }

  });
</script>

</html>