<!DOCTYPE html>
<html lang="en">

<head>
    <title>Inventario</title>
</head>

<body>
    <%- include("partials/_headerpanel") %>
        <%- include("partials/_sidebarpanel") %>
            <main id="main" class="main">

                <div class="pagetitle">
                    <h1>Inventario</h1>
                    <nav>
                        <ol class="breadcrumb">
                            <li class="breadcrumb-item"><a href="/admin">Inicio</a></li>
                            <li class="breadcrumb-item">Productos</li>
                            <li class="breadcrumb-item active">Escanear</li>
                        </ol>
                    </nav>
                </div>

                <section class="section">
                    <div class="row">
                        <div class="col-lg-12">
                            <div class="container-fluid mt-2">
                                <div id="connected" class="row g-0" style="display: none;">
                                    <div class="col">
                                        <div class="card-body">
                                            <div class="row row-cols-1 row-cols-md-2 row-cols-lg-2">
                                                <div class="col">
                                                    <div class="card text-center mb-3 shadow">
                                                        <div class="card-body">
                                                            <svg class="icon m-3" width="100" height="100"
                                                                fill="#1f6f40">
                                                                <use xlink:href="/icons/bootstrap-icons.svg#upc-scan" />
                                                            </svg>
                                                            <h5 class="card-title text-uppercase">Escanear
                                                                producto</h5>
                                                            <p class="card-text">Al escanear el producto,
                                                                podremos recopilar la
                                                                información necesaria y brindarte una
                                                                experiencia personalizada.</p>
                                                            <button onclick="escanear()" id="escanear"
                                                                class="btn btn-primary text-uppercase">Empezar</button>
                                                        </div>
                                                    </div>
                                                </div>
                                                <div class="col">
                                                    <div class="card text-center mb-3 shadow">
                                                        <div class="card-body">
                                                            <svg class="icon m-3" width="100" height="100"
                                                                fill="#1f6f40">
                                                                <use xlink:href="/icons/bootstrap-icons.svg#box-seam" />
                                                            </svg>
                                                            <h5 class="card-title text-uppercase">Asignar tag
                                                            </h5>
                                                            <p class="card-text">Al escanear el producto, te
                                                                ofrecemos la posibilidad de
                                                                editar la información del TAG del producto. Esto
                                                                te permitirá asignar un
                                                                producto según sea necesario.</p>
                                                            <button class="btn btn-primary"
                                                                onclick="asignar()">Empezar</button>
                                                        </div>
                                                    </div>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                                <div class="card" id="disconnected">
                                    <div class="card-header text-danger text-uppercase text-center">
                                        <h1>Desconectado</h1>
                                    </div>
                                    <div class="card-body">
                                        <div class="card text-center container-fluid">

                                            <img src="img/usb.gif" style="width: 35%;height: 30%;"
                                                class="align-self-center" alt="...">
                                            <div class="container-fluid">
                                                <h2 class="card-title text-uppercase">Para continuar con el proceso de
                                                    escaneo de
                                                    productos, conecte un sensor a tu PC.</h2>
                                                <button onClick="requestSerialPermission()" class="btn btn-primary"><i
                                                        class="bi bi-usb-symbol"></i> Conectar</button>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>

                        </div>
                    </div>
                </section>
            </main>
            <div class="modal fade" id="exampleModalToggle" aria-hidden="true" aria-labelledby="exampleModalToggleLabel"
                tabindex="-1">
                <div class="modal-dialog modal-dialog-centered modal-lg">
                    <form id="kardexForm">
                        <div class="modal-content">
                            <div class="modal-header">
                                <h1 class="modal-title fs-5" id="exampleModalToggleLabel">¡ESCANEA EL PRODUCTO PARA
                                    OBTENER
                                    MÁS DETALLES!</h1>
                                <button type="button" class="btn-close" data-bs-dismiss="modal"
                                    aria-label="Close"></button>
                            </div>
                            <div class="modal-body">
                                <div class="card mb-3">
                                    <div class="row g-0">
                                        <div class="col-md-4">
                                            <img src="" class="img-fluid rounded-start" id="img"
                                                style=" width: 100%; height: 300px; object-fit: contain; object-position: center;">
                                        </div>
                                        <div class="col-md-8">
                                            <div class="card-body col-12">
                                                <div class="row">
                                                    <div class="col-3 card-title">Nombre:</div>
                                                    <div class="col-9 align-self-center">
                                                        <input class="form-control" id="nombres" type="text" readonly
                                                            required>
                                                    </div>
                                                </div>
                                                <div class="row">
                                                    <div class="col-3 card-title">Categoría:</div>
                                                    <div class="col-9 card-text align-self-center">
                                                        <input class="form-control" id="categorias" type="text" readonly
                                                            required>
                                                    </div>
                                                </div>
                                                <div class="row">
                                                    <div class="col-3 card-title">Cantidad:</div>
                                                    <div class="col-9 card-text align-self-center">
                                                        <input class="form-control" id="cantidades" type="number"
                                                            readonly required>
                                                    </div>
                                                </div>
                                                <div class="row">
                                                    <div class="col-3 card-title">Precio:</div>
                                                    <div class="col-9 card-text align-self-center">
                                                        <input class="form-control" id="precios" type="number" readonly
                                                            required>
                                                    </div>
                                                </div>
                                                <p class="card-text"></p>
                                            </div>
                                            <div class="row">
                                                <div class="col-12">
                                                    <div class="form-floating">
                                                        <select class="form-select mb-3" id="tipo_movimiento" required>
                                                            <option selected disabled>Movimientos</option>
                                                            <option value="1">Saldo</option>
                                                            <option value="2">Entrada</option>
                                                            <option value="3">Salida</option>
                                                        </select>
                                                        <label for="floatingSelect">Tipo de movimiento</label>
                                                    </div>
                                                </div>
                                                <div class="col-12">
                                                    <div class="form-floating mb-3">
                                                        <input type="text" class="form-control" id="detalle"
                                                            name="detalle" placeholder="insertar"
                                                            value="Ingreso al sistema">
                                                        <label for="detalle">Detalle</label>
                                                    </div>
                                                </div>
                                                <div class="col-6">
                                                    <div class="form-floating mb-3">
                                                        <input type="number" class="form-control" id="cantidad"
                                                            name="cantidad" placeholder="insertar"
                                                            oninput="calculartotal()" required>
                                                        <label for="cantidad">Cantidad</label>
                                                    </div>
                                                </div>
                                                <div class="col-6">
                                                    <div class="form-floating mb-3">
                                                        <input type="number" class="form-control" id="precio"
                                                            name="precio" placeholder="insertar" readonly>
                                                        <label for="inputprecio">Precio</label>
                                                    </div>
                                                </div>
                                                <div class="col-12">
                                                    <div class="form-floating mb-3">
                                                        <input type="number" class="form-control" id="total"
                                                            name="total" placeholder="insertar" readonly>
                                                        <label for="total">Total</label>
                                                    </div>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                            <div class="modal-footer">
                                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cerrar</button>
                                <button class="btn btn-primary" type="submit">Guardar</button>
                            </div>
                    </form>
                </div>
            </div>
            <%- include("partials/_fotterpanel") %>
</body>
<script>
    let producto;
    document.getElementById('kardexForm').addEventListener('submit', async function (event) {
        event.preventDefault();
        var cantidad = $('#cantidad').val();
        var cantidades = $('#cantidades').val();

        var valorSeleccionado = $('#tipo_movimiento').val();
        const formData = new FormData(event.target);
        formData.append('id_producto', producto.id_producto);
        if (valorSeleccionado == '1') {
            console.log('Modo seleccionado: Saldo');
            const response = await fetch('kardex_saldo', {
                method: 'POST',
                body: formData
            });
            const data = await response.json();
            if (data.message) {
                Swal.fire({
                    toast: true,
                    position: 'bottom-end',
                    icon: 'success',
                    title: data.message,
                    showConfirmButton: false,
                    timerProgressBar: true,
                    timer: 3000
                });
                $('#exampleModalToggle').modal('hide');
            } else if (data.error) {
                Swal.fire({
                    toast: true,
                    position: 'bottom-end',
                    icon: 'error',
                    title: data.error,
                    showConfirmButton: false,
                    timerProgressBar: true,
                    timer: 3000
                });
            }
        } else if (valorSeleccionado == '2') {
            console.log('Modo seleccionado: Entrada');
            const response = await fetch('kardex_entrada', {
                method: 'POST',
                body: formData
            });
            const data = await response.json();
            if (data.message) {
                Swal.fire({
                    toast: true,
                    position: 'bottom-end',
                    icon: 'success',
                    title: data.message,
                    showConfirmButton: false,
                    timerProgressBar: true,
                    timer: 3000
                });
                $('#exampleModalToggle').modal('hide');
            } else if (data.error) {
                Swal.fire({
                    toast: true,
                    position: 'bottom-end',
                    icon: 'error',
                    title: data.error,
                    showConfirmButton: false,
                    timerProgressBar: true,
                    timer: 3000
                });
            }
        } else if (valorSeleccionado == '3') {
            if (cantidad <= cantidades || cantidad != 0) {
                console.log('Modo seleccionado: Salida');
                const response = await fetch('kardex_salida', {
                    method: 'POST',
                    body: formData
                });
                const data = await response.json();
                if (data.message) {
                    Swal.fire({
                        toast: true,
                        position: 'bottom-end',
                        icon: 'success',
                        title: data.message,
                        showConfirmButton: false,
                        timerProgressBar: true,
                        timer: 3000
                    });
                    $('#exampleModalToggle').modal('hide');
                } else {
                    Swal.fire({
                        toast: true,
                        position: 'bottom-end',
                        icon: 'error',
                        title: 'Cantidad nos disponible',
                        showConfirmButton: false,
                        timerProgressBar: true,
                        timer: 3000
                    });
                }
            } else if (data.error) {
                Swal.fire({
                    toast: true,
                    position: 'bottom-end',
                    icon: 'error',
                    title: data.error,
                    showConfirmButton: false,
                    timerProgressBar: true,
                    timer: 3000
                });
            }
        }
    });
    $('#tipo_movimiento').on('change', function () {
        var valorSeleccionado = $(this).val();
        if (valorSeleccionado == '1') {
            $('#detalle').val('Ingreso al sistema');
            $('#precio').prop('readonly', true);
        } else if (valorSeleccionado == '2') {
            $('#detalle').val('Entrada de producto');
            $('#precio').removeAttr('readonly');
        } else if (valorSeleccionado == '3') {
            $('#detalle').val('Salida de producto');
            $('#precio').prop('readonly', true);
        }
    });
    $('#exampleModalToggle').on('shown.bs.modal', async function () {
        await read();
    });
    $('#exampleModalToggle').on('hidden.bs.modal', async function () {
        if (reader) {
            await reader.cancel();
            reader.releaseLock();
            reader = null;
        }
    });
    let snd = new Audio("sound/beep.wav");
    let port;
    let reader = null;
    async function requestSerialPermission() {
        try {
            port = await navigator.serial.requestPort();
            await port.open({ baudRate: 9600 });
            if (port.getInfo().usbVendorId != 9025) {
                await port.close();
                return;
            }
            port.addEventListener('disconnect', handleDisconnect);
            await setTimeout(() => {
                document.getElementById("connected").style.display = "block";
                document.getElementById("disconnected").style.display = "none";
            }, 1000);
        } catch (error) {
            console.error('Error al solicitar permiso de acceso al puerto serie:', error);
        }
    }
    function handleDisconnect(event) {
        if (event.target === port) {
            document.getElementById("connected").style.display = "none";
            document.getElementById("disconnected").style.display = "block";
            console.log('Desconectado del puerto serie.');
        }
    }
    async function escanear() {
        $('#exampleModalToggle').modal('show');
    }

    async function asignar() {
        let tag;
        Swal.fire({
            title: '¡SELECCIONE UN PRODUCTO PARA SER ASIGNADO!',
            icon: 'info',
            html: `<div class="container-fluid text-start p-3"><select id="productos" class="form-select"><% if (productos) { %><% productos.forEach(row=> { %><option value="<%= row.tag %>"><%= row.nombre %></option><% }); %><% } %></select></div>`,
            showCloseButton: true,
            showCancelButton: true,
            confirmButtonText: 'SIGUIENTE',
            confirmButtonColor: "#198754",
            cancelButtonText: 'CANCELAR',
            showConfirmButton: true,
            focusConfirm: false,
            width: '800px',
        }).then(async (result) => {
            if (result.isConfirmed) {
                write($("#productos").val());
            }
        })
    }
    async function write(data) {
        if (!port) {
            console.error('No se ha establecido una conexión con el puerto serie.');
            return;
        }
        await sendData("e");
        await sendData("e");
        Swal.fire({
            title: '¡MANTEN EL PRODUCTO EN EL ESCANNER PARA ASIGNARLO!',
            icon: 'info',
            text: ' ',
            showCloseButton: true,
            showCancelButton: false,
            showConfirmButton: false,
            focusConfirm: false,
            width: '800px'
        }).then(async (result) => {
            if (reader) {
                await reader.cancel();
                reader.releaseLock();
                reader = null;
            }
        });
        let message = "";
        try {
            if (reader) {
                await reader.cancel();
                reader.releaseLock();
                reader = null;
            }
            reader = await port.readable.getReader();
            while (true) {
                const { value, done } = await reader.read();
                if (done) {
                    break;
                }
                const textDecoder = new TextDecoder();
                const receivedData = textDecoder.decode(value);
                message += receivedData;
                if (receivedData.includes("\n")) {
                    if (message.includes("Type First name, ending with #")) {
                        await setTimeout(async () => {
                            await sendData(data + "#");
                        }, 1000);
                    } else if (message.includes("PCD_Authenticate() failed: Timeout in communication.") || message.includes("PCD_Authenticate() failed:: Error in communication.")) {
                        Swal.fire({
                            toast: true,
                            position: 'bottom-end',
                            icon: 'error',
                            title: message,
                            showConfirmButton: false,
                            timer: 3000
                        });
                        await reader.cancel();
                        await reader.releaseLock();
                        reader = null;
                        await port.close();
                        document.getElementById("connected").style.display = "none";
                        document.getElementById("disconnected").style.display = "block";
                        console.log('Desconectado del puerto serie.');
                    } else if (message.includes("MIFARE_Write() success:")) {
                        fetch('/buscarproductotag', {
                            method: 'POST',
                            headers: { "Content-Type": "application/json" },
                            body: JSON.stringify({ tag: data }),
                        }).then(response => response.json()).then(async data => {
                            snd.play();
                            await sendData("null");
                            await sendData("null");
                            Swal.fire({
                                title: '¡PRODUCTO ASIGNADO CORRECTAMENTE!',
                                icon: 'success',
                                html: `<div class="card mb-3 border-0" ><div class="row g-0"><div class="col-md-2"><img src="${data.img}" alt="${data.nombre}" class="img-fluid rounded-start"/></div><div class="col-md-8"><div class="card-body"><h5 class="card-title text-uppercase">${data.nombre} <span class="badge bg-success rounded-pill">${data.categoria}</span></h5><p class="card-text">${data.descripcion}</p><p class="card-text"><div class="text-body-secondary">Código: ${data.codigo}</div></p></div></div></div></div>`,
                                showCloseButton: true,
                                showCancelButton: false,
                                showConfirmButton: false,
                                focusConfirm: false,
                                width: '800px'
                            }).then(async (result) => {
                                if (reader) {
                                    await reader.cancel();
                                    reader.releaseLock();
                                    reader = null;
                                }
                            });
                        });
                    }
                    message = "";
                }
            }
        } catch (error) {
            console.error('Error al leer desde el puerto serie:', error);
        }
    }
    function calculartotal() {
        var cantidad = $('#cantidad').val();
        var precio = $('#precio').val();
        $('#total').val(parseFloat(cantidad * precio).toFixed(2));
    }
    async function read() {
        if (!port) {
            console.error('No se ha establecido una conexión con el puerto serie.');
            return;
        }
        let message = "";
        await sendData("l");
        await sendData("l");
        try {
            if (reader) {
                await reader.cancel();
                reader.releaseLock();
                reader = null;
            }
            reader = await port.readable.getReader();
            while (true) {
                const { value, done } = await reader.read();
                if (done) {
                    break;
                }
                const textDecoder = new TextDecoder();
                const receivedData = textDecoder.decode(value);
                message += receivedData;
                if (receivedData.includes("\n")) {
                    if (message.includes("MIFARE_Read() failed: The CRC_A does not match.") || message.includes("MIFARE_Read() failed: Error in communication.") || message.includes("PCD_Authenticate() failed: Timeout in communication.")) {
                        Swal.fire({
                            toast: true,
                            position: 'bottom-end',
                            icon: 'error',
                            title: message,
                            showConfirmButton: false,
                            timer: 3000
                        });
                        await reader.cancel();
                        await reader.releaseLock();
                        reader = null;
                        await port.close();
                        document.getElementById("connected").style.display = "none";
                        document.getElementById("disconnected").style.display = "block";
                        console.log('Desconectado del puerto serie.');
                        $('.modal').modal('hide');
                        return;
                    }
                    fetch('/buscarproductotag', {
                        method: 'POST',
                        headers: { "Content-Type": "application/json" },
                        body: JSON.stringify({ tag: message.trim() }),
                    }).then(response => response.json()).then(async data => {
                        if (data.message) {
                            Swal.fire({
                                toast: true,
                                position: 'bottom-end',
                                icon: 'error',
                                text: data.message,
                                showConfirmButton: false,
                                timerProgressBar: true,
                                timer: 3000
                            });
                        } else if (data.codigo) {
                            Swal.fire({
                                toast: true,
                                position: 'bottom-end',
                                icon: 'success',
                                text: "El primer producto que se escaneó",
                                showConfirmButton: false,
                                timerProgressBar: true,
                                timer: 3000
                            });
                            $('#nombres').val(data.nombre);
                            $('#categorias').val(data.categoria);
                            $('#cantidades').val(data.cantidad);
                            $('#precios').val(data.precio);
                            $('#precio').val(data.precio);
                            $('#img').attr('src', data.img);
                            snd.play();
                            producto = data;
                        }
                    });
                    message = "";
                }
            }
        } catch (error) {
            console.error('Error al leer desde el puerto serie:', error);
        }
    }

    async function sendData(data) {
        try {
            let encoder = new TextEncoder();
            const encodedData = encoder.encode(data);
            const writer = port.writable.getWriter();
            await writer.write(encodedData);
            await writer.releaseLock();
        } catch (error) {
            console.error('Error al enviar datos al puerto serie:', error);
        }
    }
</script>

</html>